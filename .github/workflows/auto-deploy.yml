name: üöÄ Auto Deploy BirdEye Sniper Bot

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment even if tests fail'
        required: false
        default: false
        type: boolean

jobs:
  deploy:
    name: üéØ Deploy to Production
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: üîç Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: üì¶ Install Dependencies for Testing
      run: |
        echo "üîß Installing dependencies for validation..."
        npm ci
        
    - name: üß™ Run Tests (if available)
      run: |
        if [ -f "package.json" ] && grep -q '"test"' package.json; then
          echo "üß™ Running tests..."
          npm test || echo "‚ö†Ô∏è Tests failed but continuing..."
        else
          echo "üìù No tests found, skipping..."
        fi
      continue-on-error: true

    - name: ÔøΩ Validate Project Structure
      run: |
        echo "üîç Validating project structure..."
        
        # Check required files
        if [ ! -f "index.js" ]; then
          echo "‚ùå index.js not found!"
          exit 1
        fi
        
        if [ ! -f "package.json" ]; then
          echo "‚ùå package.json not found!"
          exit 1
        fi
        
        if [ ! -f "ecosystem.config.js" ]; then
          echo "‚ùå ecosystem.config.js not found!"
          exit 1
        fi
        
        if [ ! -d "src" ]; then
          echo "‚ùå src directory not found!"
          exit 1
        fi
        
        echo "‚úÖ Project structure validated"

    - name: üöÄ Deploy to Production Server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.PORT || 22 }}
        script: |
          echo "üöÄ Starting deployment to production..."
          
          # Navigate to project directory
          cd /root/bird || { echo "‚ùå Project directory not found!"; exit 1; }
          
          # Check git status
          echo "üì• Pulling latest changes..."
          git fetch origin
          git reset --hard origin/main
          
          # Install production dependencies
          echo "üì¶ Installing production dependencies..."
          npm ci --production
          
          # Stop existing bot
          echo "‚èπÔ∏è Stopping existing bot..."
          pm2 stop birdeye 2>/dev/null || echo "‚ÑπÔ∏è Bot was not running"
          
          # Start bot
          echo "‚ñ∂Ô∏è Starting bot..."
          pm2 start ecosystem.config.js --env production
          
          # Save PM2 configuration
          pm2 save
          
          # Wait for bot to start
          sleep 10
          
          # Check if bot is running
          if pm2 list | grep -q "birdeye.*online"; then
            echo "‚úÖ Bot started successfully!"
          else
            echo "‚ùå Bot failed to start!"
            pm2 logs birdeye --lines 20 --nostream || true
            exit 1
          fi

    - name: üè• Post-Deployment Health Check
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.PORT || 22 }}
        script: |
          cd /root/bird
          
          echo "üè• Performing health check..."
          
          # Wait a bit more for full initialization
          sleep 15
          
          # Check bot status
          BOT_STATUS=$(pm2 list | grep birdeye | awk '{print $10}' || echo "stopped")
          echo "ü§ñ Bot Status: $BOT_STATUS"
          
          # Get system metrics
          CPU_USAGE=$(top -bn1 | grep "Cpu(s)" | awk '{print $2}' | awk -F'%' '{print $1}' || echo "N/A")
          MEMORY_USAGE=$(free -m | awk 'NR==2{printf "%.1f%%", $3*100/$2 }' || echo "N/A")
          DISK_USAGE=$(df -h / | awk 'NR==2 {print $5}' || echo "N/A")
          UPTIME=$(uptime -p || echo "N/A")
          
          echo "üìä System Metrics:"
          echo "  üñ•Ô∏è CPU: ${CPU_USAGE}%"
          echo "  üíæ Memory: ${MEMORY_USAGE}"
          echo "  üíø Disk: ${DISK_USAGE}"
          echo "  ‚è±Ô∏è Uptime: ${UPTIME}"
          
          # Run auto-deploy notification
          echo "üì± Sending deployment notification..."
          ./scripts/auto-deploy.sh status
          
          echo "‚úÖ Health check completed"

    - name: üìä Deployment Summary
      if: always()
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.PORT || 22 }}
        script: |
          cd /root/bird
          
          echo "üìä Final Deployment Summary:"
          echo "================================"
          
          # Get commit info
          COMMIT_HASH=$(git rev-parse --short HEAD)
          COMMIT_MSG=$(git log -1 --pretty=format:"%s")
          DEPLOY_TIME=$(date '+%Y-%m-%d %H:%M:%S')
          
          echo "üìã Commit: $COMMIT_HASH"
          echo "üí¨ Message: $COMMIT_MSG"
          echo "‚è∞ Deploy Time: $DEPLOY_TIME"
          
          # Final bot status
          if pm2 list | grep -q "birdeye.*online"; then
            echo "üéâ DEPLOYMENT SUCCESSFUL! Bot is running."
            
            # Send success notification
            ./scripts/auto-deploy.sh webhook
          else
            echo "üí• DEPLOYMENT FAILED! Bot is not running."
            
            # Show recent logs
            echo "üìù Recent logs:"
            pm2 logs birdeye --lines 10 --nostream || true
            
            exit 1
          fi
